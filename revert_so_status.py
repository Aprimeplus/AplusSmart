# revert_so_status.py (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á)
import psycopg2
import psycopg2.extras
import json

# --- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô main_app.py) ---
DB_PARAMS = {
    "host": "192.168.1.60",
    "dbname": "aplus_com_test",
    "user": "app_user",
    "password": "cailfornia123"
}

def revert_so_status_tool():
    """
    ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ SO ‡∏ó‡∏µ‡πà 'HR Verified' ‡∏´‡∏£‡∏∑‡∏≠ 'Paid' ‡πÅ‡∏•‡πâ‡∏ß
    - ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ SO ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏î‡πâ
    - ‡∏°‡∏µ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ SO ‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
    - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏•‡∏á‡πÉ‡∏ô Audit Log
    """
    conn = None
    print("=" * 70)
    print("      Tool for Reverting 'HR Verified' / 'Paid' SO Status")
    print("=" * 70)

    try:
        conn = psycopg2.connect(**DB_PARAMS)
        while True:
            with conn.cursor(cursor_factory=psycopg2.extras.DictCursor) as cursor:
                # 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• SO ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏î‡πâ (HR Verified ‡πÅ‡∏•‡∏∞ Paid)
                cursor.execute("""
                    SELECT 
                        c.id, c.so_number, c.status, c.timestamp, 
                        c.final_sales_amount, c.payout_id, u.sale_name
                    FROM commissions c
                    LEFT JOIN sales_users u ON c.sale_key = u.sale_key
                    WHERE c.status IN ('HR Verified', 'Paid') AND c.is_active = 1 
                    ORDER BY c.status, c.timestamp DESC
                """)
                revertible_sos = cursor.fetchall()

                if not revertible_sos:
                    print("\nüéâ ‡πÑ‡∏°‡πà‡∏û‡∏ö SO ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 'HR Verified' ‡∏´‡∏£‡∏∑‡∏≠ 'Paid' ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß")
                    break

                # 2. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                print("\nSO ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏î‡πâ:")
                for i, so in enumerate(revertible_sos):
                    status_info = f"Status: {so['status']}"
                    if so['status'] == 'Paid':
                        status_info += f" (Payout ID: {so['payout_id'] or 'N/A'})"
                    
                    print(f"  [{i+1}] {so['so_number']} (Sale: {so['sale_name'] or 'N/A'}, {status_info})")
                
                print("\n‡∏û‡∏¥‡∏°‡∏û‡πå 'exit' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
                
                # 3. ‡∏£‡∏±‡∏ö Input ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                choice = input("> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå SO ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡πÄ‡∏ä‡πà‡∏ô 1), ‡∏û‡∏¥‡∏°‡∏û‡πå 'all' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡πâ‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î, ‡∏´‡∏£‡∏∑‡∏≠ 'exit' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å: ").strip().lower()

                if choice == 'exit':
                    break
                
                selected_records = []

                if choice == 'all':
                    selected_records = revertible_sos
                elif choice.isdigit() and 1 <= int(choice) <= len(revertible_sos):
                    selected_records.append(revertible_sos[int(choice) - 1])
                else:
                    print("‚ö†Ô∏è  ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
                    continue
                
                if not selected_records:
                    continue

                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ SO ‡∏ó‡∏µ‡πà‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 'Paid' ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                has_paid_so = any(rec['status'] == 'Paid' for rec in selected_records)
                
                print("-" * 30)
                print("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:")
                for rec in selected_records:
                    print(f"  - {rec['so_number']} (Status: {rec['status']})")
                
                if has_paid_so:
                    print("\n" + "!"*70)
                    print("!! ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å SO ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 'Paid') !!")
                    print("‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô (Payout Log) ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
                    print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
                    print("!"*70)

                confirm = input("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å? ‡∏û‡∏¥‡∏°‡∏û‡πå 'YES' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô: ").strip()

                if confirm != 'YES':
                    print("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£")
                    continue
                    
                # 4. ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                so_to_revert = [rec['so_number'] for rec in selected_records]
                
                sql_update = """
                    UPDATE commissions
                    SET 
                        status = 'Forwarded_To_HR', 
                        approver_sale_manager_key = NULL,
                        approval_date_sale_manager = NULL,
                        final_sales_amount = NULL,
                        final_cost_amount = NULL,
                        final_gp = NULL,
                        final_margin = NULL,
                        payout_id = NULL -- << ‡∏•‡πâ‡∏≤‡∏á Payout ID ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏ú‡∏π‡∏Å‡∏≠‡∏¢‡∏π‡πà
                    WHERE 
                        so_number = ANY(%s)
                        AND status IN ('HR Verified', 'Paid')
                        AND is_active = 1;
                """
                cursor.execute(sql_update, (so_to_revert,))
                updated_rows = cursor.rowcount
                conn.commit()
                print(f"‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ SO ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {updated_rows} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")

                # 5. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Audit Log
                with conn.cursor() as log_cursor:
                    for record in selected_records:
                        log_details = {
                            'reverted_so': record['so_number'],
                            'original_status': record['status'],
                            'original_payout_id': record['payout_id']
                        }
                        log_cursor.execute("""
                            INSERT INTO audit_log (action, table_name, record_id, user_info, summary_json)
                            VALUES (%s, %s, %s, %s, %s)
                        """, (
                            'Revert SO Status', 
                            'commissions', 
                            record['id'], 
                            'revert_so_status_tool.py', 
                            json.dumps(log_details)
                        ))
                    conn.commit()
                print("üìù ‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô Audit Log ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")


    except Exception as e:
        if conn:
            conn.rollback()
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    finally:
        if conn:
            conn.close()
        print("‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß")


if __name__ == "__main__":
    revert_so_status_tool()